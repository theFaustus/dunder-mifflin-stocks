version: '3'

services:
  #  vault-server:
  #    container_name: dunder-mifflin-stocks-vault
  #    image: vault:latest
  #    ports:
  #      - "8200:8200"
  #    environment:
  #      VAULT_ADDR: "http://0.0.0.0:8200"
  #      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
  #      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
  postgres-keycloak:
    container_name: dunder-mifflin-stocks-keycloak-db
    image: postgres
    restart: always
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - "postgresql-keycloak-data:/var/lib/postgresql"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

    ports:
      - "5435:5432"
  keycloak:
    container_name: dunder-mifflin-stocks-keycloak
    #    image: jboss/keycloak:latest
    image: jboss/keycloak:13.0.1 #build it locally on M1 Chip
    restart: always
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8181:8080"
    depends_on:
      - postgres-keycloak
  postgresql-licenses:
    container_name: dunder-mifflin-stocks-licenses-pg-db
    image: postgres
    restart: always
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    ports:
      - "5433:5432"
    volumes:
      - "postgresql-licenses-data:/var/lib/postgresql"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: dunder-mifflin-stocks-licenses-dev
  postgresql-organizations:
    container_name: dunder-mifflin-stocks-organizations-pg-db
    image: postgres
    restart: always
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    ports:
      - "5434:5432"
    volumes:
      - "postgresql-organizations-data:/var/lib/postgresql"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: dunder-mifflin-stocks-organizations-dev
  postgresql-adminer:
    container_name: dunder-mifflin-stocks-pgadminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: dunder-mifflin-stocks-postgresql
  #  configserver:
  #    container_name: inc.dunder-mifflin.stocks/config-server
  #    image: inc.dunder-mifflin.stocks/config-server:0.0.1-SNAPSHOT
  #    ports:
  #      - "8071:8071"
  #  licensingservice:
  #    depends_on:
  #      - configserver
  #    container_name: inc.dunder-mifflin.stocks/licensing-service
  #    image: inc.dunder-mifflin.stocks/licensing-service:0.0.1-SNAPSHOT
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      SPRING_PROFILES_ACTIVE: "dev"
  zookeeper:
    container_name: dunder-mifflin-stocks-zookeeper
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: dunder-mifflin-stocks-kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka-data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  redis-server:
    container_name: dunder-mifflin-stocks-redis
    image: redis:alpine
    ports:
      - "6379:6379"
  elasticsearch:
    container_name: dunder-mifflin-stocks-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    volumes:
      - "esdata:/var/lib/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - discovery.seed_hosts=["localhost", "127.0.0.1"]
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - elk
  logstash:
    container_name: dunder-mifflin-stocks-logstash
    image: docker.elastic.co/logstash/logstash:8.1.0
    volumes:
      - type: bind
        source: ./src/main/resources/infrastructure/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    ports:
      - "5001:5001"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
  kibana:
    container_name: dunder-mifflin-stocks-kibana
    image: docker.elastic.co/kibana/kibana:8.1.0
    environment:
      ELASTICSEARCH_URL: "http://localhost:9300"
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
  prometheus:
    container_name: dunder-mifflin-stocks-prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/infrastructure/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - metrics
  grafana:
    image: "grafana/grafana:latest"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - metrics
    ports:
      - "3000:3000"
    container_name: dunder-mifflin-stocks-grafana
networks:
  elk:
    driver: bridge
  metrics:
    driver: bridge

volumes:
  esdata:
    driver: local
  postgresql-licenses-data:
    driver: local
  postgresql-organizations-data:
    driver: local
  postgresql-keycloak-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local